map $http_user_agent $ignore_ua {
    default         0;
    "~Pingdom.*"    1;
    "~Monit/5.*"    1;
}

server {
    listen       80 default;
    server_name  shmilee.io;

    root      /srv/http;
    include   /etc/mynginx/fastcgi.conf;
    include   /etc/mynginx/fastcgi_params;
    index     index.html index.htm index.php;
    charset   utf-8;
    client_max_body_size 30M;
    set $vn_exec_flag '';

    location / {
        if ($ignore_ua) {
            access_log off;
            return 200;
        }
    }

    #error_page  404              /404.html;
    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/mynginx/html;
    }

    location ~ \.php$ {
        #read http://wiki.nginx.org/PHPFcgiExample#Notes
        #try_files      $uri = 404;
        fastcgi_split_path_info ^(.+?\.php)(/.*)$;
        if (!-f $document_root$fastcgi_script_name) {
            return 404;
        }
        fastcgi_pass   unix:/run/php-fpm/php-fpm8.sock;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    location ~ /\.ht {
        deny  all;
    }

    #Cgit
    location ^~ /cgit {
        try_files $uri @cgit;
    }
    location @cgit {
        fastcgi_param SCRIPT_FILENAME /usr/share/webapps/cgit/cgit.cgi;
        fastcgi_pass unix:/run/fcgiwrap.sock;
        fastcgi_split_path_info           ^(/cgit/?)(.+)$;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param QUERY_STRING $args;
    }
    location /cgit-web {
        rewrite ^/cgit-web(/.*)$ $1 break;
        root /usr/share/webapps/cgit;
    }
    location /cgit-web/cgit.css {
        alias /srv/http/css/custom-cgit.css;
    }

    #upload
    location ^~ /upload {
        fancyindex on;
        fancyindex_exact_size off;
        fancyindex_localtime on;
        fancyindex_footer "/jQuery-File-Upload/footer.html";
        include    /etc/mynginx/mime.types;
        types {
            # here is additional types
            text/plain  log sh m md rst in out;
        }
    }

    #AUR repo
    location ^~ /repo-shmilee {
        alias /srv/repo-shmilee;
        autoindex on;
        autoindex_exact_size off;
        autoindex_localtime on;
        include    /etc/mynginx/mime.types;
        types {
            text/plain  log;
        }
    }

    # status
    location /status {   
        stub_status on;   
        access_log on;
    }

    # jupyterhub notebook
    location ^~ /jupyterhub {
        return 301 https://$host$request_uri;
    }

}

server {
    listen 443 default ssl http2;
    server_name shmilee.io;
    ssl_certificate        /srv/etc/ssl-certs/server-shmilee.crt;
    ssl_certificate_key    /srv/etc/ssl-certs/server-shmilee.key;
    client_max_body_size 30M;
    set $vn_exec_flag '';

    location / {
        if ($ignore_ua) {
            access_log off;
            return 200;
        }
        return 301 http://$host$request_uri;
    }

    location ^~ /jupyterhub {
        access_log  /srv/log/nginx-jupyterhub-access.log main buffer=32k flush=2m;
        error_log   /srv/log/nginx-jupyterhub-error.log notice;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_pass       http://10.72.198.126:8888;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
